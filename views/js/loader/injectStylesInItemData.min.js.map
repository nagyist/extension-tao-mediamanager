{"version":3,"mappings":"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","names":["loaderScript","configUrl","bundle","loadController","controllerOptions","controllerPath","params","window","controller","document","startController","bundles","require","define","assetStyles","assets","assetClassName","assetHref","styleNone","$","rdf_styles","rdf_asset","formatStyles","duplicated","assetHref2","stylesheetName","linkTag","cssRules","CSSStyleSheet","classNameFormated","scopedCssRules","Object","replacementSelector","rulesInBrackets","selectors","scopedSelectors","toReplace","singleSelectorText","scopeSelector","getStyles","includes","_","element","itemData","requests","passageUris","request","uri","then","response","qtiClass","attributes","href","stylesheet","media","title","type","serial","setTimeout","catch","itemDataString","getPassagesFromElement","getPassagesFromItemData","injectPassagesStylesInItemData","checkAndInjectStylesInItemData"],"sources":["../../loader/bootstrap.js","../qtiCreator/helper/formatStyles.js","../richPassage/helpers.js","../richPassage/injectStylesInItemData.js","module-create.js"],"sourcesContent":["/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2018 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Bootstrap the app, start the entry controller\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\n(function(){\n    'use strict';\n\n\n\n    var loaderScript = document.getElementById('amd-loader');\n    var configUrl = loaderScript.getAttribute('data-config');\n    var bundle  = loaderScript.getAttribute('data-bundle');\n\n    var loadController = function loadController(){\n        var controllerOptions = {};\n        var controllerPath = loaderScript.getAttribute('data-controller');\n        var params = loaderScript.getAttribute('data-params');\n        try{\n            controllerOptions = JSON.parse(params);\n        } catch(err){\n            controllerOptions = {};\n        }\n        window.require([controllerPath], function(controller) {\n            var startController = function startController(){\n                if(!window.started){\n                    window.started = true;\n                    controller.start(controllerOptions);\n                }\n            };\n            document.addEventListener('readystatechange', startController, false);\n            if (document.readyState === 'complete') {\n                startController();\n            }\n        });\n    };\n\n    //always start to load the config\n    window.require([configUrl], function() {\n\n        //define the global loading mechanism\n        if(!window.loadBundles){\n            //keep tracl of loaded bundles, even if require does it,\n            //this prevent some unecessary cycles\n            window.loaded = {};\n\n            /**\n             * Loading entry point for inter bundle dependency,\n             * always take the bundles from the params and window.bundles\n             * @param {String[]} [bundles] - an optional list of bundle to load\n             */\n            window.loadBundles = function loadBundles(bundles){\n                bundles = bundles || [];\n                bundles = bundles.concat(window.bundles)\n                bundles = bundles.filter( function(item, index){\n                    return item && bundles.indexOf(item) === index && window.loaded[item] !== true;\n                });\n                require(bundles, function(){\n                    bundles.forEach( function( item ) {\n                        window.loaded[item] = true;\n                    });\n                    loadController();\n                });\n            }\n        }\n\n        if(bundle || (window.bundles && window.bundles.length)) {\n            window.loadBundles([bundle]);\n        } else {\n            loadController();\n        }\n    });\n})();\n\ndefine(\"loader/bootstrap\", function(){});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2022 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoMediaManager/qtiCreator/helper/formatStyles',[\n    'jquery'\n], function ($) {\n    'use strict';\n\n    function getStyles (stylesheetPrefix, duplicated = false) {\n        const assetStyles = $(`link[data-serial*=${stylesheetPrefix}]`);\n        assetStyles.each((i, style) => {\n            if (style) {\n                let assets = '';\n                let assetClassName = '';\n\n                // styles duplicates on Preview inside Authoring editor\n                if (duplicated) {\n                    const assetHref = $(`link[href=\"${style.href}\"]`);\n                    if (assetHref && assetHref.length > 1) {\n                        assetHref.each((j, styleNone) => {\n                            if (styleNone.attributes['data-serial'].value.match(/[\\w-]*stylesheet_[\\w-]*/g)) {\n                                // item preview inside editor reload CSS files again. Reuse CSS format from editor.\n                                styleNone.disabled = true;\n                            }\n                        })\n                    }\n                    if ($('.preview-content .qti-include').length) {\n                        assets = $('.preview-content .qti-include');\n                    } else if ($('.previewer-test-component .qti-include').length) {\n                        assets = $('.previewer-test-component .qti-include');\n                    }\n                } else {\n                    assets = $('.qti-itemBody');\n                }\n\n                if (assets.length) {\n                    assets.each((h, asset) => {\n                        const hasClass = asset.className.match(/[\\w-]*tao-[\\w-]*/g);\n                        if (!!hasClass && hasClass.length) {\n                            assetClassName = hasClass[0];\n                        }\n\n                        if (style.sheet) {\n                            const stylesheetName = style.href.split('&stylesheet=');\n                            if (stylesheetName && stylesheetName[1] !== 'tao-user-styles.css') {\n                                // check rdf matches to apply the attached CSS file to the passage\n                                const rdf_styles = stylesheetName[0].split('%23').reverse()[0];\n                                const rdf_asset = asset.dataset.href && asset.dataset.href.split('_').reverse()[0];\n                                if (rdf_styles === rdf_asset || stylesheetPrefix !== 'stylesheet') {\n                                    formatStyles(style.sheet, assetClassName);\n                                }\n                            }\n                        } else {\n                            // in case Passage has no className and it is preview inside editor\n                            const renderLayout = $('#item-editor-panel .qti-itemBody .qti-include > div');\n                            if (renderLayout.length) {\n                                const renderHasClass = renderLayout[h].className.match(/[\\w-]*tao-[\\w-]*/g);\n                                if (!hasClass && renderHasClass && renderHasClass.length) {\n                                    assetClassName = renderHasClass[0];\n                                    $(asset).addClass(assetClassName);\n                                }\n                            }\n                            // styles duplicated means preview on edit, already has a class from editor\n                            if (duplicated) {\n                                assetClassName = '';\n                            }\n\n                            const assetHref2 = $(`link[href=\"${style.href}\"]:not([disabled])`);\n                            const stylesheetName = style.href.split('stylesheet=');\n                            if (stylesheetName && stylesheetName[1] !== 'tao-user-styles.css' && assetHref2.length) {\n                                formatStyles(assetHref2[0].sheet, assetClassName);\n                            }\n                        }\n                    })\n                }\n            }\n        })\n    }\n\n    function formatStyles (linkTag, className) {\n        const { cssRules } = linkTag && linkTag.sheet || linkTag || {};\n        const CSSStyleSheet = linkTag && linkTag.sheet || linkTag || {};\n        const classNameFormated = className && className.length ? `.${className}` : '';\n        // prefix rules\n        const scopedCssRules = _scopeStyles(cssRules, classNameFormated, ['body html *']);\n\n        if (cssRules) {\n            Object.values(cssRules).map((index, rule) => {\n                CSSStyleSheet.deleteRule(index);\n            })\n            const newRules = scopedCssRules.split('\\n');\n            Object.values(newRules).map(rule => {\n                CSSStyleSheet.insertRule(rule);\n            })\n        }\n\n        return;\n    };\n\n    /**\n     * Apply selector replacement and scope prefixing to a set of style rules\n     * @param {CSSRuleList} cssRules\n     * @param {String} scopeSelector - applied as prefix; also used as replacementSelector if none specified\n     * @param {String[]} toReplace - list of selectors to be replaced by replacementSelector\n     * @param {String} replacementSelector\n     * @returns {String} styles, with scopeSelector prefix applied\n     */\n    function _scopeStyles (cssRules, scopeSelector, toReplace, replacementSelector) {\n        if (!cssRules) {\n            return '';\n        }\n\n        if (!replacementSelector) {\n            replacementSelector = scopeSelector;\n        }\n\n        const scopedStyles = Object.values(cssRules).map(rule => {\n            // avoid @import, @media, @keyframes etc\n            if (!rule.selectorText) {\n                return '';\n            }\n\n            /**\n             * Need to split selectorList apart from rules, before splitting it by comma\n             * @example CSS:\n             *   selector1, selector2 { rules; }\n             */\n            const rulesInBrackets = rule.cssText.substr(rule.selectorText.length).trim();\n            const selectors = rule.selectorText.split(/\\s*,\\s*/);\n\n            const scopedSelectors = [];\n\n            for (let singleSelectorText of selectors) {\n                // avoid the most obvious top level single selectors that won't work even if scoped\n                if (['html', 'body', '*'].includes(singleSelectorText)) {\n                    continue;\n                }\n\n                // make the replacements\n                if (scopeSelector && toReplace) {\n                    for (let toReplaceSelector of toReplace) {\n                        if (singleSelectorText.includes(toReplaceSelector)) {\n                            singleSelectorText = singleSelectorText.replace(\n                                new RegExp(toReplaceSelector, 'ig'),\n                                replacementSelector\n                            );\n                        }\n                    }\n                }\n\n                // has desired scoping been applied to the rule?\n                const containsScopeSelector =\n                    singleSelectorText.includes(`${scopeSelector} `) ||\n                    singleSelectorText.startsWith(scopeSelector) ||\n                    singleSelectorText.endsWith(scopeSelector);\n\n                // scope unscoped rule by the scope selector\n                if (scopeSelector && !containsScopeSelector) {\n                    scopedSelectors.push(`${scopeSelector} ${singleSelectorText}`);\n                } else {\n                    scopedSelectors.push(singleSelectorText);\n                }\n            }\n\n            if (scopedSelectors.length) {\n                return `${scopedSelectors.join(',')} ${rulesInBrackets}`;\n            }\n            return '';\n        });\n\n        return scopedStyles.filter(str => str.length > 0).join('\\n');\n    }\n\n    return {\n        formatStyles,\n        getStyles\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2021 (original work) Open Assessment Technologies SA;\n */\n\ndefine('taoMediaManager/richPassage/helpers',[\n    'lodash',\n    'uri',\n    'util/url',\n    'core/dataProvider/request',\n    'taoMediaManager/qtiCreator/helper/formatStyles'\n], function (_, uri, urlUtil, request, formatStyles) {\n    'use strict';\n\n    /**\n     * Get all passage elements qtiClass: 'include' presents in Element\n     * @param {Object} element\n     * @returns {Array} array of include elements\n     */\n    function getPassagesFromElement(element = {}) {\n        let includes = {};\n        _.forEach(['elements', 'choices'], elementCollection => {\n            if (elementCollection === 'choices' && _.isArray(element[elementCollection])) {\n                // in MatchInterection choices is Array of match sets\n                _.forEach(element[elementCollection], choiceMatch => {\n                    _.forEach(choiceMatch, choice => {\n                        includes = _.extend(includes, getPassagesFromElement(choice));\n                    });\n                });\n            } else {\n                _.forEach(element[elementCollection], childElement => {\n                    if (childElement.qtiClass === 'include') {\n                        includes[childElement.serial] = childElement;\n                    } else {\n                        includes = _.extend(includes, getPassagesFromElement(childElement));\n                    }\n                });\n            }\n        });\n        if (element.body) {\n            includes = _.extend(includes, getPassagesFromElement(element.body));\n        }\n        if (element.prompt) {\n            includes = _.extend(includes, getPassagesFromElement(element.prompt));\n        }\n        return includes;\n    }\n\n    /**\n     * Get all passage elements qtiClass: 'include' presents in item\n     * @param {Object} itemData\n     * @returns {Array} array of include elements\n     */\n    function getPassagesFromItemData(itemData = {}) {\n        let includes = {};\n        if (itemData.content && itemData.content.data && itemData.content.data.body) {\n            includes = _.extend(includes, getPassagesFromElement(itemData.content.data.body));\n        }\n        return includes;\n    }\n\n    /**\n     * Check all passage elements and inject passage styles in itemData with absolute href\n     * @param {Object | Array} elements\n     * @param {Object} itemData\n     * @returns {Promise}\n     */\n    function injectPassagesStylesInItemData(elements = {}, itemData = {}) {\n        const requests = [];\n        const passageUris = [];\n        _.forEach(elements, (elem, id) => {\n            const passageHref = elem.attributes.href;\n            if (/taomedia:\\/\\/mediamanager\\//.test(passageHref)) {\n                // only rich passages from Assets\n                const passageUri = uri.decode(passageHref.replace('taomedia://mediamanager/', ''));\n                if (!passageUris.includes(passageUri)) {\n                    passageUris.push(passageUri);\n                    requests.push(\n                        request(urlUtil.route('getStylesheets', 'SharedStimulusStyling', 'taoMediaManager'), {\n                            uri: passageUri\n                        })\n                            .then(response => {\n                                response.children.forEach((element, index) => {\n                                    const serial = `stylesheet_${id}_${index}`;\n                                    itemData.content.data.stylesheets[serial] = {\n                                        qtiClass: 'stylesheet',\n                                        attributes: {\n                                            href: urlUtil.route('loadStylesheet', 'SharedStimulusStyling', 'taoMediaManager', {\n                                                uri: passageUri,\n                                                stylesheet: element.name\n                                            }),\n                                            media: 'all',\n                                            title: '',\n                                            type: 'text/css'\n                                        },\n                                        serial\n                                    };\n                                });\n                                setTimeout(() => {\n                                    formatStyles.getStyles('stylesheet', true);\n                                }, 1000);\n                            })\n                            .catch()\n                    );\n                }\n            }\n        });\n        return Promise.all(requests).then(() => itemData);\n    }\n\n    /**\n     * Check all passage elements and inject rich passage styles in itemData\n     * @param {Object} itemData\n     * @returns {Promise}\n     */\n    function checkAndInjectStylesInItemData(itemData = {}) {\n        const itemDataString = JSON.stringify(itemData);\n        if (/\"qtiClass\":\"include\"/.test(itemDataString)) {\n            const elements = getPassagesFromItemData(itemData);\n            return injectPassagesStylesInItemData(elements, itemData);\n        }\n        return Promise.resolve(itemData);\n    }\n\n    return {\n        getPassagesFromElement,\n        getPassagesFromItemData,\n        injectPassagesStylesInItemData,\n        checkAndInjectStylesInItemData\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2021 (original work) Open Assessment Technologies SA;\n */\n\ndefine('taoMediaManager/richPassage/injectStylesInItemData',['taoMediaManager/richPassage/helpers'], function (helpers) {\n    'use strict';\n    return helpers.checkAndInjectStylesInItemData;\n});\n\n","\ndefine(\"taoMediaManager/loader/injectStylesInItemData.bundle\", function(){});\n"]}