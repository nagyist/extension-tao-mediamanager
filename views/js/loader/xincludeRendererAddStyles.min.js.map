{"version":3,"mappings":"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","names":["loaderScript","configUrl","bundle","loadController","controllerOptions","controllerPath","params","window","controller","document","startController","bundles","require","define","assetStyles","assets","assetClassName","assetHref","styleNone","$","rdf_styles","rdf_asset","formatStyles","duplicated","assetHref2","stylesheetName","linkTag","cssRules","CSSStyleSheet","classNameFormated","scopedCssRules","Object","replacementSelector","rulesInBrackets","selectors","scopedSelectors","toReplace","singleSelectorText","scopeSelector","getStyles","helpers","data","buffer","helper","stack1","itemConfig","globalConfig","currentItem","styleSheetManagerVisibilityKey","_getUri","_basename","mainClassSelector","hashClassSelector","taoHashClassPrefix","hashClass","mainClass","style","customStylesheet","$styleElem","styleElem","common","title","deleteTxt","editLabelTxt","downloadTxt","preparingMessageHtml","failMessageHtml","isInValidLocalTxt","erase","create","mProp","css","_","dontAppend","apply","itemBodyClass","searchClass","selector","value","verifyInit","save","cssJson","stylesheetUri","deleteStylesheet","download","styleName","uri","stylesheet","fetch","then","url","a","catch","addStylesheet","tplData","path","label","listEntry","isInvalidLocal","setTimeout","cssFile","isInit","isLocal","fileName","link","_link","_href","_sep","parser","loadStylesheet","addItemStylesheets","currentStylesheet","removeOrphanedStylesheets","getItem","init","lang","href","request","featuresService","getStyle","getHashClass","getMainClass","setHashClass","setMainClass","generateHashClass","generateMainClass","replaceHashClass","replaceMainClass","clearCache","response","rel","type","layout","head","passageClassName","hasClass","e"],"sources":["../../loader/bootstrap.js","../qtiCreator/helper/formatStyles.js","../qtiCreator/tpl/toolbars/cssToggler!tpl","../qtiCreator/editor/styleEditor/styleEditor.js","../richPassage/xincludeRendererAddStyles.js","module-create.js"],"sourcesContent":["/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2016-2018 (original work) Open Assessment Technologies SA ;\n */\n\n/**\n * Bootstrap the app, start the entry controller\n * @author Bertrand Chevrier <bertrand@taotesting.com>\n */\n(function(){\n    'use strict';\n\n\n\n    var loaderScript = document.getElementById('amd-loader');\n    var configUrl = loaderScript.getAttribute('data-config');\n    var bundle  = loaderScript.getAttribute('data-bundle');\n\n    var loadController = function loadController(){\n        var controllerOptions = {};\n        var controllerPath = loaderScript.getAttribute('data-controller');\n        var params = loaderScript.getAttribute('data-params');\n        try{\n            controllerOptions = JSON.parse(params);\n        } catch(err){\n            controllerOptions = {};\n        }\n        window.require([controllerPath], function(controller) {\n            var startController = function startController(){\n                if(!window.started){\n                    window.started = true;\n                    controller.start(controllerOptions);\n                }\n            };\n            document.addEventListener('readystatechange', startController, false);\n            if (document.readyState === 'complete') {\n                startController();\n            }\n        });\n    };\n\n    //always start to load the config\n    window.require([configUrl], function() {\n\n        //define the global loading mechanism\n        if(!window.loadBundles){\n            //keep tracl of loaded bundles, even if require does it,\n            //this prevent some unecessary cycles\n            window.loaded = {};\n\n            /**\n             * Loading entry point for inter bundle dependency,\n             * always take the bundles from the params and window.bundles\n             * @param {String[]} [bundles] - an optional list of bundle to load\n             */\n            window.loadBundles = function loadBundles(bundles){\n                bundles = bundles || [];\n                bundles = bundles.concat(window.bundles)\n                bundles = bundles.filter( function(item, index){\n                    return item && bundles.indexOf(item) === index && window.loaded[item] !== true;\n                });\n                require(bundles, function(){\n                    bundles.forEach( function( item ) {\n                        window.loaded[item] = true;\n                    });\n                    loadController();\n                });\n            }\n        }\n\n        if(bundle || (window.bundles && window.bundles.length)) {\n            window.loadBundles([bundle]);\n        } else {\n            loadController();\n        }\n    });\n})();\n\ndefine(\"loader/bootstrap\", function(){});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2022 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoMediaManager/qtiCreator/helper/formatStyles',[\n    'jquery'\n], function ($) {\n    'use strict';\n\n    function getStyles (stylesheetPrefix, duplicated = false) {\n        const assetStyles = $(`link[data-serial*=${stylesheetPrefix}]`);\n        assetStyles.each((i, style) => {\n            if (style) {\n                let assets = '';\n                let assetClassName = '';\n\n                // styles duplicates on Preview inside Authoring editor\n                if (duplicated) {\n                    const assetHref = $(`link[href=\"${style.href}\"]`);\n                    if (assetHref && assetHref.length > 1) {\n                        assetHref.each((j, styleNone) => {\n                            if (styleNone.attributes['data-serial'].value.match(/[\\w-]*stylesheet_[\\w-]*/g)) {\n                                // item preview inside editor reload CSS files again. Reuse CSS format from editor.\n                                styleNone.disabled = true;\n                            }\n                        })\n                    }\n                    if ($('.preview-content .qti-include').length) {\n                        assets = $('.preview-content .qti-include');\n                    } else if ($('.previewer-test-component .qti-include').length) {\n                        assets = $('.previewer-test-component .qti-include');\n                    }\n                } else {\n                    assets = $('.qti-itemBody');\n                }\n\n                if (assets.length) {\n                    assets.each((h, asset) => {\n                        const hasClass = asset.className.match(/[\\w-]*tao-[\\w-]*/g);\n                        if (!!hasClass && hasClass.length) {\n                            assetClassName = hasClass[0];\n                        }\n\n                        if (style.sheet) {\n                            const stylesheetName = style.href.split('&stylesheet=');\n                            if (stylesheetName && stylesheetName[1] !== 'tao-user-styles.css') {\n                                // check rdf matches to apply the attached CSS file to the passage\n                                const rdf_styles = stylesheetName[0].split('%23').reverse()[0];\n                                const rdf_asset = asset.dataset.href && asset.dataset.href.split('_').reverse()[0];\n                                if (rdf_styles === rdf_asset || stylesheetPrefix !== 'stylesheet') {\n                                    formatStyles(style.sheet, assetClassName);\n                                }\n                            }\n                        } else {\n                            // in case Passage has no className and it is preview inside editor\n                            const renderLayout = $('#item-editor-panel .qti-itemBody .qti-include > div');\n                            if (renderLayout.length) {\n                                const renderHasClass = renderLayout[h].className.match(/[\\w-]*tao-[\\w-]*/g);\n                                if (!hasClass && renderHasClass && renderHasClass.length) {\n                                    assetClassName = renderHasClass[0];\n                                    $(asset).addClass(assetClassName);\n                                }\n                            }\n                            // styles duplicated means preview on edit, already has a class from editor\n                            if (duplicated) {\n                                assetClassName = '';\n                            }\n\n                            const assetHref2 = $(`link[href=\"${style.href}\"]:not([disabled])`);\n                            const stylesheetName = style.href.split('stylesheet=');\n                            if (stylesheetName && stylesheetName[1] !== 'tao-user-styles.css' && assetHref2.length) {\n                                formatStyles(assetHref2[0].sheet, assetClassName);\n                            }\n                        }\n                    })\n                }\n            }\n        })\n    }\n\n    function formatStyles (linkTag, className) {\n        const { cssRules } = linkTag && linkTag.sheet || linkTag || {};\n        const CSSStyleSheet = linkTag && linkTag.sheet || linkTag || {};\n        const classNameFormated = className && className.length ? `.${className}` : '';\n        // prefix rules\n        const scopedCssRules = _scopeStyles(cssRules, classNameFormated, ['body html *']);\n\n        if (cssRules) {\n            Object.values(cssRules).map((index, rule) => {\n                CSSStyleSheet.deleteRule(index);\n            })\n            const newRules = scopedCssRules.split('\\n');\n            Object.values(newRules).map(rule => {\n                CSSStyleSheet.insertRule(rule);\n            })\n        }\n\n        return;\n    };\n\n    /**\n     * Apply selector replacement and scope prefixing to a set of style rules\n     * @param {CSSRuleList} cssRules\n     * @param {String} scopeSelector - applied as prefix; also used as replacementSelector if none specified\n     * @param {String[]} toReplace - list of selectors to be replaced by replacementSelector\n     * @param {String} replacementSelector\n     * @returns {String} styles, with scopeSelector prefix applied\n     */\n    function _scopeStyles (cssRules, scopeSelector, toReplace, replacementSelector) {\n        if (!cssRules) {\n            return '';\n        }\n\n        if (!replacementSelector) {\n            replacementSelector = scopeSelector;\n        }\n\n        const scopedStyles = Object.values(cssRules).map(rule => {\n            // avoid @import, @media, @keyframes etc\n            if (!rule.selectorText) {\n                return '';\n            }\n\n            /**\n             * Need to split selectorList apart from rules, before splitting it by comma\n             * @example CSS:\n             *   selector1, selector2 { rules; }\n             */\n            const rulesInBrackets = rule.cssText.substr(rule.selectorText.length).trim();\n            const selectors = rule.selectorText.split(/\\s*,\\s*/);\n\n            const scopedSelectors = [];\n\n            for (let singleSelectorText of selectors) {\n                // avoid the most obvious top level single selectors that won't work even if scoped\n                if (['html', 'body', '*'].includes(singleSelectorText)) {\n                    continue;\n                }\n\n                // make the replacements\n                if (scopeSelector && toReplace) {\n                    for (let toReplaceSelector of toReplace) {\n                        if (singleSelectorText.includes(toReplaceSelector)) {\n                            singleSelectorText = singleSelectorText.replace(\n                                new RegExp(toReplaceSelector, 'ig'),\n                                replacementSelector\n                            );\n                        }\n                    }\n                }\n\n                // has desired scoping been applied to the rule?\n                const containsScopeSelector =\n                    singleSelectorText.includes(`${scopeSelector} `) ||\n                    singleSelectorText.startsWith(scopeSelector) ||\n                    singleSelectorText.endsWith(scopeSelector);\n\n                // scope unscoped rule by the scope selector\n                if (scopeSelector && !containsScopeSelector) {\n                    scopedSelectors.push(`${scopeSelector} ${singleSelectorText}`);\n                } else {\n                    scopedSelectors.push(singleSelectorText);\n                }\n            }\n\n            if (scopedSelectors.length) {\n                return `${scopedSelectors.join(',')} ${rulesInBrackets}`;\n            }\n            return '';\n        });\n\n        return scopedStyles.filter(str => str.length > 0).join('\\n');\n    }\n\n    return {\n        formatStyles,\n        getStyles\n    };\n});\n\n","\ndefine('tpl!taoMediaManager/qtiCreator/tpl/toolbars/cssToggler', ['handlebars'], function(hb){ \nreturn hb.template(function (Handlebars,depth0,helpers,partials,data) {\n  this.compilerInfo = [4,'>= 1.0.0'];\nhelpers = this.merge(helpers, Handlebars.helpers); data = data || {};\n  var buffer = \"\", stack1, helper, functionType=\"function\", escapeExpression=this.escapeExpression;\n\n\n  buffer += \"<li data-css-res=\\\"\";\n  if (helper = helpers.path) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.path); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n    <span class=\\\"icon-preview style-sheet-toggler\\\" title=\\\"\";\n  if (helper = helpers.title) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.title); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\"></span>\\n    <span class=\\\"file-label truncate\\\" title=\\\"\";\n  if (helper = helpers.editLabelTxt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.editLabelTxt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"</span>\\n    <input type=\\\"text\\\" class=\\\"style-sheet-label-editor\\\" value=\\\"\";\n  if (helper = helpers.label) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.label); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\">\\n    <span class=\\\"icon-bin\\\" title=\\\"\";\n  if (helper = helpers.deleteTxt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.deleteTxt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-role=\\\"css-delete\\\"></span>\\n    <span class=\\\"icon-download\\\" title=\\\"\";\n  if (helper = helpers.downloadTxt) { stack1 = helper.call(depth0, {hash:{},data:data}); }\n  else { helper = (depth0 && depth0.downloadTxt); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }\n  buffer += escapeExpression(stack1)\n    + \"\\\" data-role=\\\"css-download\\\"></span>\\n</li>\";\n  return buffer;\n  });\n});\n\n","/*\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2021 (original work) Open Assessment Technologies SA ;\n *\n */\n\n/**\n * @author dieter <dieter@taotesting.com>\n * @author Hanna Dzmitryieva <hanna@taotesting.com>\n */\n\ndefine('taoMediaManager/qtiCreator/editor/styleEditor/styleEditor',[\n    'jquery',\n    'lodash',\n    'i18n',\n    'util/urlParser',\n    'core/dataProvider/request',\n    'tpl!taoMediaManager/qtiCreator/tpl/toolbars/cssToggler',\n    'taoMediaManager/qtiCreator/helper/formatStyles',\n    'util/url',\n    'services/features',\n    'jquery.fileDownload'\n], function ($, _, __, UrlParser, request, cssTpl, formatStyles, urlUtil, featuresService) {\n    'use strict';\n\n    const styleSheetManagerVisibilityKey = 'taoMediaManager/creator/StyleSheetManager';\n    let itemConfig;\n\n    /**\n     * qtiItemCreator config provided from QtiCreator\n     * used for generation of the ajax uri\n     */\n    let globalConfig;\n\n    /**\n     * generate Ajax URI\n     * @param {String} action\n     * @returns {*}\n     */\n    const _getUri = function (action) {\n        return globalConfig[`${action}CssUrl`];\n    };\n\n    /**\n     * Extract the file name from a path\n     * @param {String} path\n     * @returns {*}\n     * @private\n     */\n    const _basename = function (path) {\n        return path.substring(path.lastIndexOf('/') + 1);\n    };\n\n    // hash class for shared stimulus styles\n    const mainClassSelector = 'mainClass';\n    const hashClassSelector = 'hashClass';\n    const taoHashClassPrefix = 'tao-';\n    let hashClass = '';\n    let mainClass = '';\n\n    // stylesheet as object\n    let style = {},\n        currentItem,\n        customStylesheet = '';\n    // DOM element to hold the style\n    const $styleElem = (function () {\n        let styleElem = $('#item-editor-user-styles');\n        if (!styleElem.length) {\n            styleElem = $('<style>', { id: 'item-editor-user-styles' });\n            $('head').append(styleElem);\n        } else {\n            styleElem.empty();\n        }\n        return styleElem;\n    })(),\n        common = {\n            title: __('Disable this stylesheet temporarily'),\n            deleteTxt: __('Remove this stylesheet'),\n            editLabelTxt: __('Edit stylesheet label'),\n            downloadTxt: __('Download this stylesheet'),\n            preparingMessageHtml: __('Preparing CSS, please wait…'),\n            failMessageHtml: __('There was a problem downloading your CSS, please try again.'),\n            isInValidLocalTxt: __(\n                'This stylesheet has not been found on the server. you may want to delete this reference'\n            )\n        };\n    /**\n     * Delete all custom styles\n     * @returns {Boolean}\n     */\n    const erase = function () {\n        style = {};\n        $styleElem.text('');\n        return false;\n    };\n\n    /**\n     * Create CSS and add it to DOM\n     *\n     * @param {Boolean} dontAppend whether or not to append the stylesheet to the DOM. This is used by the iframe preview\n     * @returns {Boolean}\n     */\n    const create = function (dontAppend) {\n        let mSelector, // selector inside a media query\n            mProp, // property inside a media query\n            css = '';\n\n        if (_.isEmpty(style)) {\n            return erase();\n        }\n\n        // rebuild CSS\n        _.forEach(style, (value1, key1) => {\n            // first level key, could be selector or media query\n            css += `${key1}{`;\n            _.forEach(value1, (value2, key2) => {\n                // second level key, could be css property or selector\n                // in the case of a surrounding media query\n                if (_.isPlainObject(value2)) {\n                    for (mSelector in value2) {\n                        css += `${key2}{`;\n                        for (mProp in value2) {\n                            css += `${mProp}:${value2[mSelector]};`;\n                        }\n                        css += '}';\n                    }\n                } else {\n                    // regular selectors\n                    css += `${key2}:${value2};`;\n                }\n            });\n            css += '}\\n';\n        });\n\n        if (!dontAppend) {\n            $styleElem.text(css);\n        }\n        return css;\n    };\n\n    /**\n     * Apply rule to CSS\n     *\n     * @param {{string}} selector\n     * @param {{string}} property\n     * @param {{string}} value\n     */\n    const apply = function (selector, property, value) {\n        const itemBodyClass = document.querySelector('.qti-itemBody').classList;\n        itemBodyClass.forEach(function (className) {\n            const searchClass = className.match(/(?<className>tao-\\w+)?/);\n            if (searchClass.groups.className) {\n                mainClass = searchClass.groups.className;\n            }\n        })\n        selector = selector.replace(mainClassSelector, mainClass);\n        selector = selector.replace(hashClassSelector, hashClass);\n\n        style[selector] = style[selector] || {};\n\n        // delete this rule\n        if (!value) {\n            delete style[selector][property];\n            if (_.size(style[selector]) === 0) {\n                delete style[selector];\n            }\n        } else {\n            // add this rule\n            style[selector][property] = value;\n        }\n\n        // apply rule\n        create();\n\n        /**\n         * Fires a change notification on the item style\n         * @event taoQtiItem/qtiCreator/editor/styleEditor/styleEditor#stylechange.qti-creator\n         * @property {Object} [detail] An object providing some additional detail on the event\n         * @property {Boolean} [detail.initializing] Tells if the stylechange occurs at init time\n         */\n        $(document).trigger('stylechange.qti-creator');\n    };\n\n    /**\n     * Has the class been initialized\n     *\n     * @returns {Boolean}\n     */\n    const verifyInit = function verifyInit() {\n        if (!itemConfig) {\n            throw new Error('Missing itemConfig, did you call styleEditor.init()?');\n        }\n        return true;\n    };\n\n    /**\n     * Save the resulting CSS to a file\n     * @returns {Promise}\n     */\n    const save = function save() {\n        verifyInit();\n        return request(\n            _getUri('save'),\n            _.extend({}, itemConfig, {\n                cssJson: JSON.stringify(style),\n                stylesheetUri: customStylesheet.attr('href')\n            }),\n            'POST'\n        );\n    };\n\n    const deleteStylesheet = function (stylesheet) {\n        verifyInit();\n        return request(\n            _getUri('save'),\n            _.extend({}, itemConfig, {\n                cssJson: JSON.stringify({}),\n                stylesheetUri: `css/${stylesheet.attr('title')}`\n            }),\n            'POST'\n        );\n    };\n\n    /**\n     * Download CSS as file\n     * @param {String} uri\n     */\n    const download = function (uri, name) {\n        verifyInit();\n        const style = uri.match(/stylesheet=(?<groupName>\\w+)?/);\n        let styleName = '';\n        if (style && style.groups && style.groups.groupName) {\n            styleName = `${style.groups.groupName}.css`;\n        }\n        const downloadUrl = urlUtil.build(_getUri('download'), {\n            uri: globalConfig['id'],\n            stylesheet: styleName\n        });\n\n        fetch(downloadUrl)\n            .then(resp => resp.blob())\n            .then(blob => {\n                const url = window.URL.createObjectURL(blob);\n                const a = document.createElement('a');\n                a.style.display = 'none';\n                a.href = url;\n                a.download = name;\n                document.body.appendChild(a);\n                a.click();\n                window.URL.revokeObjectURL(url);\n            })\n            .catch(() => common.failMessageHtml);\n    };\n\n    /**\n     * Add a single stylesheet, the custom stylesheet will be loaded as object\n     *\n     * @param {Object} stylesheet\n     */\n    const addStylesheet = function (stylesheet, itemConfig) {\n        let fileName, link, listEntry, parser;\n        function loadStylesheet(linkElement, stylesheetObject, isLocal, isValid) {\n            // in the given scenario we cannot test whether a remote stylesheet really exists\n            // this would require to pipe all remote css via php curl\n            const isInvalidLocal = isLocal && !isValid,\n                tplData = {\n                    path: stylesheetObject.attr('href'),\n                    label: stylesheetObject.attr('title') || fileName,\n                    title: common.title,\n                    deleteTxt: common.deleteTxt,\n                    downloadTxt: common.downloadTxt,\n                    editLabelTxt: isInvalidLocal ? common.isInValidLocalTxt : common.editLabelTxt\n                };\n\n            // create list entry\n            listEntry = $(cssTpl(tplData));\n\n            listEntry.data('stylesheetObj', stylesheetObject);\n\n            // initialize download button\n            $('#style-sheet-toggler').append(listEntry);\n\n            if (isInvalidLocal) {\n                listEntry.addClass('not-available');\n                listEntry.find('[data-role=\"css-download\"], .style-sheet-toggler').css('visibility', 'hidden');\n                return;\n            }\n\n            $styleElem.before(linkElement);\n\n            // time difference between loading the css file and applying the styles\n            setTimeout(\n                function () {\n                    // clean and format CSS styles with Browser API\n                    const cssFile = $(`[href=\"${link[0].href}\"]`);\n                    if (cssFile && cssFile[0].sheet) {\n                        formatStyles.formatStyles(cssFile[0].sheet, mainClass);\n                    }\n\n                    let isInit = false;\n\n                    $(document).trigger('customcssloaded.styleeditor', [style]);\n                    $(window).trigger('resize');\n                    if (currentItem.pendingStylesheetsInit) {\n                        isInit = true;\n                        currentItem.pendingStylesheetsInit--;\n                    }\n\n                    /**\n                     * Fires a change notification on the item style\n                     * @event taoQtiItem/qtiCreator/editor/styleEditor/styleEditor#stylechange.qti-creator\n                     * @property {Object} [detail] An object providing some additional detail on the event\n                     * @property {Boolean} [detail.initializing] Tells if the stylechange occurs at init time\n                     */\n                    $(document).trigger('stylechange.qti-creator', [{ initializing: isInit }]);\n                },\n                isLocal ? 500 : 3500\n            );\n        }\n\n        // argument is uri\n        if (_.isString(stylesheet)) {\n            stylesheet = currentItem.createStyleSheet(stylesheet);\n        }\n\n        fileName = _basename(stylesheet.attr('href'));\n        // link with cache buster\n        link = (function () {\n            const _link = $(stylesheet.render());\n            const _href = itemConfig && urlUtil.route('loadStylesheet', 'SharedStimulusStyling', 'taoMediaManager', { uri: itemConfig.id, stylesheet: fileName }) || _link.attr('href');\n            const _sep = _href.indexOf('?') > -1 ? '&' : '?';\n            _link.attr('href', _href + _sep + new Date().getTime().toString());\n            return _link;\n        })();\n\n        // cache css before applying allows for a pretty good guess\n        // when the stylesheet is loaded and the buttons in the style editor\n        // can be changed\n        parser = new UrlParser(link.attr('href'));\n        if (parser.checkCORS()) {\n            $.when($.ajax(link.attr('href'))).then(\n                function () {\n                    loadStylesheet(link, stylesheet, true, true);\n                },\n                // add file to list even on failure to be able to remove it from the item\n                function () {\n                    loadStylesheet(link, stylesheet, true, false);\n                }\n            );\n        } else {\n            // otherwise load it with a big timeout and hope for the best\n            // unfortunately this dirty way is the only possibility in cross domain environments\n            loadStylesheet(link, stylesheet, false);\n        }\n    };\n\n    /**\n     * Add style sheets to toggler\n     */\n    const addItemStylesheets = function () {\n        let currentStylesheet;\n        currentItem.pendingStylesheetsInit = _.size(currentItem.stylesheets);\n\n        _.forEach(currentItem.stylesheets, value => {\n            currentStylesheet = value;\n\n            if ('tao-user-styles.css' === _basename(currentStylesheet.attr('href'))) {\n                customStylesheet = currentStylesheet;\n            } else {\n                // add those that are loaded synchronously\n                addStylesheet(value);\n            }\n        });\n\n        // if no custom css had been found, add empty stylesheet anyway\n        if (!customStylesheet) {\n            customStylesheet = currentItem.createStyleSheet('css/tao-user-styles.css');\n        }\n    };\n\n    /**\n     * Remove orphaned stylesheets. These would be present if previously another item has been edited\n     */\n    const removeOrphanedStylesheets = function () {\n        $('link[data-serial]').remove();\n        customStylesheet = null;\n        erase();\n    };\n\n    /**\n     * retrieve the current item\n     *\n     * @returns {*}\n     */\n    const getItem = function () {\n        return currentItem;\n    };\n\n    /**\n     * Initialize class\n     * @param {Object} item\n     * @param {Object} config\n     */\n    const init = function (item, config) {\n        let href;\n\n        globalConfig = config;\n        // promise\n        currentItem = item;\n\n        //prepare config object\n        itemConfig = {\n            uri: config.id,\n            lang: config.lang\n        };\n\n        removeOrphanedStylesheets();\n\n        // this creates at the same time customStylesheet in case it doesn't exist yet\n        addItemStylesheets();\n\n        href = customStylesheet.attr('href');\n\n        currentItem.data('responsive', true);\n\n        request(_getUri('load'), _.extend({}, itemConfig, { stylesheetUri: href })).then(function (_style) {\n            // copy style to global style\n            style = _style;\n\n            // apply rules\n            create();\n\n            // inform editors about custom sheet\n            $(document).trigger('customcssloaded.styleeditor', [style]);\n        });\n\n        if(featuresService.isVisible(styleSheetManagerVisibilityKey, false)) {\n            $('#sidebar-right-css-manager').show();\n        }\n        \n    };\n\n    const getStyle = function () {\n        return style;\n    };\n\n    const getHashClass = function () {\n        return hashClass;\n    };\n\n    const getMainClass = function () {\n        return mainClass;\n    };\n\n    const setHashClass = function (cssClass) {\n        hashClass = cssClass;\n    };\n\n    const setMainClass = function (cssClass) {\n        mainClass = cssClass;\n    };\n\n    const generateHashClass = function () {\n        return (hashClass = `${taoHashClassPrefix}${Math.random().toString(36).substr(2, 9)}`);\n    };\n\n    const generateMainClass = function () {\n        return (mainClass = `${taoHashClassPrefix}${Math.random().toString(36).substr(2, 9)}`);\n    };\n\n    const replaceHashClass = function (selector) {\n        return hashClass && selector.replace(hashClassSelector, hashClass) || selector;\n    };\n\n    const replaceMainClass = function (selector) {\n        return mainClass && selector.replace(mainClassSelector, mainClass) || selector;\n    };\n\n    const clearCache = function() {\n        removeOrphanedStylesheets();\n        $(document).off('customcssloaded.styleeditor');\n    };\n\n    return {\n        apply: apply,\n        save: save,\n        deleteStylesheet: deleteStylesheet,\n        download: download,\n        erase: erase,\n        init: init,\n        create: create,\n        getItem: getItem,\n        getStyle: getStyle,\n        addStylesheet: addStylesheet,\n        getHashClass: getHashClass,\n        setHashClass: setHashClass,\n        generateHashClass: generateHashClass,\n        replaceHashClass: replaceHashClass,\n        getMainClass: getMainClass,\n        setMainClass: setMainClass,\n        generateMainClass: generateMainClass,\n        replaceMainClass: replaceMainClass,\n        clearCache: clearCache\n    };\n});\n\n","/**\n * This program is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License\n * as published by the Free Software Foundation; under version 2\n * of the License (non-upgradable).\n *\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with this program; if not, write to the Free Software\n * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.\n *\n * Copyright (c) 2021 (original work) Open Assessment Technologies SA ;\n */\ndefine('taoMediaManager/richPassage/xincludeRendererAddStyles',[\n    'lodash',\n    'jquery',\n    'uri',\n    'util/url',\n    'core/dataProvider/request',\n    'taoMediaManager/qtiCreator/helper/formatStyles',\n    'taoMediaManager/qtiCreator/editor/styleEditor/styleEditor',\n], function (_, $, uri, urlUtil, request, formatStyles, styleEditor) {\n    'use strict';\n\n    return function xincludeRendererAddStyles(passageHref, passageClassName, serial, head = $('head')) {\n        if (/taomedia:\\/\\/mediamanager\\//.test(passageHref)) {\n            // check rich passage styles and inject them to item\n            const passageUri = uri.decode(passageHref.replace('taomedia://mediamanager/', ''));\n            request(urlUtil.route('getStylesheets', 'SharedStimulusStyling', 'taoMediaManager'), {\n                uri: passageUri\n            })\n                .then(response => {\n                    response.children.forEach(element => {\n                        // check different names of elements\n                        const link = urlUtil.route('loadStylesheet', 'SharedStimulusStyling', 'taoMediaManager', {\n                            uri: passageUri,\n                            stylesheet: element.name\n                        });\n                        const styleElem = $('<link>', {\n                            rel: 'stylesheet',\n                            type: 'text/css',\n                            href: link,\n                            'data-serial': passageUri\n                        });\n\n                        const layout = head.find(`link[href=\"${link}\"]`);\n                        if (!layout.length) {\n                            head.append(styleElem[0]);\n                            if (element.name !== 'tao-user-styles.css' && serial.length) {\n                                setTimeout(() => {\n                                    if (!passageClassName) {\n                                        passageClassName = styleEditor.generateMainClass();\n                                        const layout = $(`[data-serial=\"${serial}\"] .qti-include > div`);\n                                        const hasClass = layout.className && layout.className.match(/[\\w-]*tao-[\\w-]*/g);\n                                        if (!hasClass) {\n                                            layout.addClass(passageClassName);\n                                        }\n                                    }\n                                    const cssFile = $(`link[href=\"${link}\"]`);\n                                    cssFile.each((i, e) => {\n                                        const isFormat = e.dataset && e.dataset.format;\n                                        if (!isFormat && e) {\n                                            e.dataset.format = true;\n                                            formatStyles.formatStyles(e.sheet, passageClassName);\n                                        }\n                                    })\n                                }, 500)\n                            }\n                        }\n\n                    });\n                })\n                .catch();\n        }\n    };\n});\n\n","\ndefine(\"taoMediaManager/loader/xincludeRendererAddStyles.bundle\", function(){});\n"]}